{
	"info": {
		"_postman_id": "86c25f09-2555-466e-8189-b1e1299b71f7",
		"name": "goREST-APICollection",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "34670829"
	},
	"item": [
		{
			"name": "CreateUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"",
							"pm.collectionVariables.set(\"userid\",jsonData.id);",
							"",
							"pm.test(\"Verify Response Status Code\", function () {",
							"    pm.response.to.have.status(201);",
							"    pm.response.to.have.status(\"Created\");",
							"});",
							"",
							"pm.test(\"Verify Response Body Fields\", function () {",
							"    pm.expect(pm.response.json()).to.be.an('object');",
							"    pm.expect(pm.response.json()).to.have.property('id');",
							"    pm.expect(pm.response.json()).to.have.property('name');",
							"    pm.expect(pm.response.json()).to.have.property('email');",
							"    pm.expect(pm.response.json()).to.have.property('gender');",
							"    pm.expect(pm.response.json()).to.have.property('status');",
							"});",
							"",
							"pm.test(\"Check New User Details in Response Body\", function () {",
							"    pm.expect(jsonData.id).to.eql(pm.collectionVariables.get(\"userid\"));",
							"    pm.expect(jsonData.name).to.eql(pm.collectionVariables.get(\"username\"));",
							"    pm.expect(jsonData.email).to.eql(pm.collectionVariables.get(\"useremail\"));",
							"});",
							"",
							"pm.test(\"Check Response Headers\", function () {",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json; charset=utf-8');",
							"    pm.expect(pm.response.headers.get('Connection')).to.eql('keep-alive');",
							"    pm.expect(pm.response.headers.get('Server')).to.eql('cloudflare');",
							"});",
							"",
							"pm.test(\"Response time is less than 500ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(500);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"username\",\"Aby John\");",
							"pm.collectionVariables.set(\"useremail\",\"abyj@yopmail.com\");",
							"pm.collectionVariables.set(\"newname\",\"Eby Jack\");",
							"pm.collectionVariables.set(\"newemail\",\"ebyj@yopmail.com\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": {
						"token": "86d84049014f9c750d9b29bb9fc8c82aeff3f5f01644b5af80af6f8b460b125a"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\":\"{{username}}\",\n    \"gender\":\"male\",\n    \"email\":\"{{useremail}}\", \n    \"status\":\"inactive\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{gourl}}/public/v2/users"
			},
			"response": []
		},
		{
			"name": "GetUserNew",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"",
							"pm.test(\"Verify Response Status Code\", () => {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.have.status(\"OK\");",
							"});",
							"",
							"pm.test(\"Verify Response Body Fields\", function () {",
							"    pm.expect(pm.response.json()).to.be.an('object');",
							"    pm.expect(pm.response.json()).to.have.property('id');",
							"    pm.expect(pm.response.json()).to.have.property('name');",
							"    pm.expect(pm.response.json()).to.have.property('email');",
							"    pm.expect(pm.response.json()).to.have.property('gender');",
							"    pm.expect(pm.response.json()).to.have.property('status');",
							"});",
							"",
							"pm.test(\"Match Response Details and User Details\", function () {",
							"    pm.expect(jsonData.id).to.eql(pm.collectionVariables.get(\"userid\"));",
							"    pm.expect(jsonData.name).to.eql(pm.collectionVariables.get(\"username\"));",
							"    pm.expect(jsonData.email).to.eql(pm.collectionVariables.get(\"useremail\"));",
							"});",
							"",
							"pm.test(\"Check Response Headers\", function () {",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json; charset=utf-8');",
							"    pm.expect(pm.response.headers.get('Connection')).to.eql('keep-alive');",
							"    pm.expect(pm.response.headers.get('Server')).to.eql('cloudflare');",
							"});",
							"",
							"pm.test(\"Response time is less than 500ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(500);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "{{gourl}}/public/v2/users/{{userid}}"
			},
			"response": []
		},
		{
			"name": "UpdateUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"",
							"pm.collectionVariables.set(\"userid\",jsonData.id);",
							"",
							"pm.test(\"Update Success Status Code\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.have.status(\"OK\");",
							"});",
							"",
							"pm.test(\"Verify Response Body Fields\", function () {",
							"    pm.expect(pm.response.json()).to.be.an('object');",
							"    pm.expect(pm.response.json()).to.have.property('id');",
							"    pm.expect(pm.response.json()).to.have.property('name');",
							"    pm.expect(pm.response.json()).to.have.property('email');",
							"    pm.expect(pm.response.json()).to.have.property('gender');",
							"    pm.expect(pm.response.json()).to.have.property('status');",
							"});",
							"",
							"pm.test(\"Match Response Body for updated User Details\", function () {",
							"    pm.expect(jsonData.id).to.eql(pm.collectionVariables.get(\"userid\"));",
							"    pm.expect(jsonData.name).to.eql(pm.collectionVariables.get(\"newname\"));",
							"    pm.expect(jsonData.email).to.eql(pm.collectionVariables.get(\"newemail\"));",
							"});",
							"",
							"pm.test(\"Check Response Headers\", function () {",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json; charset=utf-8');",
							"    pm.expect(pm.response.headers.get('Connection')).to.eql('keep-alive');",
							"    pm.expect(pm.response.headers.get('Server')).to.eql('cloudflare');",
							"});",
							"",
							"pm.test(\"Response time is less than 500ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(500);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\":\"{{newname}}\",\n    \"email\":\"{{newemail}}\",\n    \"status\":\"active\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{gourl}}/public/v2/users/{{userid}}"
			},
			"response": []
		},
		{
			"name": "GetUserAfterUpdate",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"",
							"pm.test(\"Verify Response Status Code\", () => {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.have.status(\"OK\");",
							"});",
							"",
							"pm.test(\"Verify Response Body Fields\", function () {",
							"    pm.expect(pm.response.json()).to.be.an('object');",
							"    pm.expect(pm.response.json()).to.have.property('id');",
							"    pm.expect(pm.response.json()).to.have.property('name');",
							"    pm.expect(pm.response.json()).to.have.property('email');",
							"    pm.expect(pm.response.json()).to.have.property('gender');",
							"    pm.expect(pm.response.json()).to.have.property('status');",
							"});",
							"",
							"pm.test(\"Check Updated User Details in Response Body\", function () {",
							"    pm.expect(jsonData.id).to.eql(pm.collectionVariables.get(\"userid\"));",
							"    pm.expect(jsonData.name).to.eql(pm.collectionVariables.get(\"newname\"));",
							"    pm.expect(jsonData.email).to.eql(pm.collectionVariables.get(\"newemail\"));",
							"});",
							"",
							"pm.test(\"Check Response Headers\", function () {",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json; charset=utf-8');",
							"    pm.expect(pm.response.headers.get('Connection')).to.eql('keep-alive');",
							"    pm.expect(pm.response.headers.get('Server')).to.eql('cloudflare');",
							"});",
							"",
							"pm.test(\"Response time is less than 500ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(500);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "{{gourl}}/public/v2/users/{{userid}}"
			},
			"response": []
		},
		{
			"name": "DeleteUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful Delete Request\", function () {",
							"    pm.expect(pm.response.code).to.eql(204);",
							"    pm.response.to.have.status(\"No Content\"); ",
							"});",
							"",
							"pm.test(\"Response time is less than 500ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(500);",
							"});",
							"",
							"",
							"pm.collectionVariables.unset(\"username\");",
							"pm.collectionVariables.unset(\"useremail\");",
							"pm.collectionVariables.unset(\"newemail\");",
							"pm.collectionVariables.unset(\"newname\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": "{{gourl}}/public/v2/users/{{userid}}"
			},
			"response": []
		},
		{
			"name": "FetchDeletedUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonData = pm.response.json();",
							"",
							"pm.test(\"Verify Response Code & Status\", function() {",
							"    pm.expect(pm.response.code).to.eql(404);",
							"    pm.expect(pm.response.status).to.eql(\"Not Found\");",
							"});",
							"",
							"pm.test(\"Verify Response Body-Message\", function () {",
							"    pm.expect(pm.response.json()).to.have.property('message').to.eql(\"Resource not found\");",
							"});",
							"",
							"pm.test(\"Response time is less than 500ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(500);",
							"});",
							"",
							"pm.collectionVariables.unset(\"userid\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "{{gourl}}/public/v2/users/{{userid}}"
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": {
			"token": "{{bToken}}"
		}
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "gourl",
			"value": "https://gorest.co.in/",
			"type": "string"
		},
		{
			"key": "bToken",
			"value": "\"Login to GoRest -Generate BearerToken - Add Here\"",
			"type": "string"
		}
	]
}